@page "{speakerSlug}"
@using System.Globalization
@inject IConferenceService conferenceService
@inject IConfiguration configuration
@{
    var slug = "gbg-2024";
    var speakerSlug = Model.RouteData.Values["speakerSlug"].ToString();
    var speaker = conferenceService.GetSpeaker(slug, speakerSlug);

    var speakerImageUrl = string.Empty;
    var firstThumb = speaker.SpeakerImages.FirstOrDefault(i => i.ImageType.Slug == "thumb");
    if (firstThumb != null)
    {
        speakerImageUrl = firstThumb.ImageUrl;
    }

    var tagClasses = speaker.Tags.Select(t => "tag-" + t.Slug).ToArray();
    var socialLinks = new Dictionary<string, string>
    {
        { "Twitter", speaker.Twitter },
        { "GitHub", speaker.GitHub },
        { "LinkedIn", speaker.LinkedIn },
        { "Website", speaker.Web }
    };
}

<section id="info" class="content-section text-center speaker">
    <div class="program-section">
        <div class="container">
            <div class="row">
                <div class="col-xs-12 text-center">
                    <div class="photo">
                        @foreach (var tagClass in tagClasses)
                        {
                            <span class="@tagClass"></span>
                        }
                        <img class="img-circle @string.Join(" ", tagClasses)" src="@speakerImageUrl" />
                    </div>
                    <h1 style="margin-top: 20px;">@speaker.Name</h1>
                    <h2>@speaker.Company</h2>
                    <div class="social-links speakerLinkGroup">
                        @foreach (var link in socialLinks)
                        {
                        if (!string.IsNullOrEmpty(link.Value))
                        {
                        <a href="@link.Value" target="_blank" class="social-link">@link.Key</a>
                        }
                        }
                    </div>
                    <style>
                        .social-link {
                            margin-right: 10px;
                        }
                        .social-link:not(:last-child)::after {
                            content: '|';
                            margin-left: 10px;
                        }
                    </style>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="content-section">
    <div class="program-section" style="background-color: white; padding-top: 40px;">
        <div class="container">
            @foreach (var session in @speaker.Sessions)
            {
                <div id="@session.Slug" style="position: relative; top: -60px"></div>
                <div class="row">
                    <div class="col-lg-8 col-lg-offset-2">
                        @{
                            var nameText = "Don't miss \"{0}\"";
                            if (!string.IsNullOrEmpty(speaker.Twitter))
                            {
                                nameText = nameText + " with @" + speaker.Twitter;
                            }
                            var twitterText = nameText + " at @Swetugg Gbg 2023!";
                            var avail = 229 - twitterText.Length;
                            var roomSlot = session.RoomSlots.FirstOrDefault();

                            twitterText = string.Format(
                            twitterText,
                            (session.Name.Length <= avail) ? session.Name : session.Name.Substring(0, avail - 3) + "..."
                            );
                            var linkUrl = HttpContext.Request.GetDisplayUrl() + "#" + session.Slug;
                        }
                        <a href="#@session.Slug">
                            <h2>
                                @session.Name<br />
                                @if (roomSlot != null)
                                {
                                    var start = roomSlot.Start ?? roomSlot.Slot.Start;
                                    var end = roomSlot.End ?? roomSlot.Slot.End;
                                    <small>
                                        @roomSlot.Room.Name, @start.ToString("dddd HH:mm") - @end.ToString("HH:mm")
                                    </small>
                                }
                            </h2>
                        </a>
                        <p>
                            <markdown markdown="@session.Description" />
                        </p>
                    </div>
                </div>
            }

            <div class="row">
                <div class="col-lg-8 col-lg-offset-2">
                    <h2>@speaker.Name</h2>
                    <p>
                        <markdown markdown="@speaker.Bio" />
                    </p>
                </div>
            </div>

        </div>
    </div>
</section>

@section meta {
    @{
        var session = speaker.Sessions.FirstOrDefault();
        var speakerUrl = HttpContext.Request.GetDisplayUrl();
    }

@if (session != null)
    {
        var sessionUrl = speakerUrl + "#" + session.Slug;

        <meta property="og:url" content="@sessionUrl" />
        <meta property="og:title" content="@speaker.Name - @session.Name" />
        <meta property="og:description" content="@session.Description" />
        if (session.VideoPublished && !string.IsNullOrWhiteSpace(session.VideoUrl))
        {
            var youtubeId = session.VideoUrl.Substring(session.VideoUrl.LastIndexOf("/",
            StringComparison.InvariantCultureIgnoreCase) + 1);

            <meta property="og:type" content="article" />

            <meta property="og:image" content="https://i1.ytimg.com/vi/@(youtubeId)/hqdefault.jpg" />
            @*
<meta property="og:video" content="https://www.youtube.com/e/@(youtubeId)?autoplay=1"/>
<meta property="og:video:secure_url" content="https://www.youtube.com/e/@(youtubeId)?autoplay=1"/>
*@
        }
        else
        {
            <meta property="og:image" content="@speakerImageUrl" />
        }
    }
    else
    {
        <meta property="og:url" content="@speakerUrl" />
        <meta property="og:image" content="@speakerImageUrl" />
        <meta property="og:title" content="@speaker.Name" />
        <meta property="og:description" content="@speaker.Bio" />
    }
    }